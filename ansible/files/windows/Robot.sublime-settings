{
    /*
        File extension defines which types of files the Robot Framework
        Assistant plugin will search and index from the folder defined
        in the robot_framework_workspace option.

        This setting does not affect to the which files are uses the
        syntax highlight.
    */

    "robot_framework_extension": "robot",

    /*
        Path to Python binary

        In order the scanning and indexing of keywords and variables to
        work, path to Python binary must be defined. It must be the same
        Python binary where the Robot Framework is installed.

        In Linux like environments this could be like: /usr/bin/python
        and in Windows this could be like: C:\\Python27\\python.exe
    */

    "path_to_python": "C:\\Python27\\python.exe",


    /*
        Robot Framework Workspace

    Defines a root folder where Test Suite located.
    Before the Robot Framework Assistant can provide the keyword
    and variable completion features, it needs to scan and index
    the test suite and resource files. The argument defines the root folder
    where scanning of robot data is performed.

    In windows the backslash is the folder separator and in json
    backslash is the escape character. Therefore, in windows write
    double backslash to write literal backslash.

    Linux example: "/home/User/myRobotTests"
    Windows example: "c:\\Users\\User\\Desktop\\myRobotTests"

    */
    "robot_framework_workspace": "C:\\Users\\georgoma\\Test Automation\\E2E\\E2E-MG-Robot",

    /*
    RF library path
    */
    "robot_framework_module_search_path":
    [
        "C:\\Users\\georgoma\\Test Automation\\E2E\\E2E-MG-Robot",
        "C:\\Users\\georgoma\\Test Automation\\E2E\\E2E-IMS-Robot"
    ],

    /*
    Automatic database update on saving file

    The robot_framework_automatic_database_update setting controls the
    internal database updating. If the set to true, the internal
    database table and index are created after a Robot Framework test data
    file is saved. If set to false, the internal database tables are
    only updated when the `Create Database`, `Create Database Tables`
    or `Update Internal Database For Active Tab`
    commands are run.

    The setting only controls the Robot Framework test data. If a
    libraries or a variable files are updated, then `Create Database`,
    `Create Database Tables` or `Create Database Table From Active Tab`
    commands must be run to update the internal database.

    */
    "robot_framework_automatic_database_update": true,
}
